pieces{
  horse{
    moves{
      x : 2, y : 1
      x : 2, y : -1
      x : -2, y : 1
      x : -2, y : -1
      x : 1, y : 2
      x : 1, y : -2
      x : -1, y : 2
      x : -1, y : -2
    }
    can_jump
  }
  tower{
    moves{
      horizontal(,)
      vertical(,)
    }
  }
  bishop{
    moves{
      diagonal(,)
    }
  }
  queen{
    moves{
      horizontal(,)
      vertical(,)
      diagonal(,)
    }
  }
  king{
    moves{
      horizontal(-1,1)
      vertical(-1,1)
      diagonal(-1,1)
    }
  }
  pawn{
    moves{
      vertical(1,2)
      x : 1, y : 1
      explicit{
        x: [-1, 0],
        y: (x) => [1, 2],
        killing: true
      }
    }
  }
}

initial_status{
  pieces{
    tower{
      positions{
        x : 0, y : 0
        x : 7, y : 0
      }
      mirrored
    }
    horse{
      positions{
        x : 1, y : 0
        x : 6, y : 0
      }
      mirrored
    }
    bishop{
      positions{
        x : 2, y : 0
        x : 5, y : 0
      }
      mirrored
    }
    queen{
      positions{
        x : 3, y : 0
      }
      mirrored
    }
    king{
      positions{
        x : 4, y : 0
      }
      mirrored
    }
    pawn{
      positions{
        x : [0, 8], y : 1
      }
      mirrored
    }
  }
}

rules{
  first_player : 0
  width : 8
  height : 8
  coloring : alternate
}

invariant{
  cant_risk(king)
  protect_king(king)
}

finish{
  trapped(king)
}
