main:
end main;

on_move:
  if current_player == 1 then
    move_a();
  end if;
end on_move;

move_a():
  let objective = [0, height - 1];
  let best_dest = [width - 1, 0];
  let best_piece = [width - 1, 0];
  for x from 0 to width - 1 do
    for y from 0 to height - 1 do
      if(board[x, y].owner == 1) then
        let dest = get_best_dest([x, y], objective);
        if(dist(dest, objective) < dist(best_dest, objective)) then
          best_dest = dest;
          best_piece = [x, y];
        end if;
      end if;
    done;
  done;
  move(best_piece, best_dest);
end move_a;

point get_best_dest(origin : point, objective : point):
  let best_dest = [width - 1, 0];
  for x from -2 to 2 do
    for y from -2 to 2 do
      if(can_move(origin, origin + [x, y])) then
        if(dist(origin + [x, y], objective) < dist(best_dest, objective)) then
          if(dist(origin + [x, y], objective) < dist(origin, objective)) then
            best_dest = origin + [x, y];
          end if;
        end if;
      end if;
    done;
  done;
  return best_dest;
end get_best_dest;


int dist(a : point, b : point): //dist taxi
  return abs(a[0] - b[0]) + abs(a[1] - b[1]);
end dist;

int abs(num : int):
  if(num > 0) then
    return num;
  else
    return 0 - num;
  end if;
end abs;